{
	"name": "df_demo",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_blob_input",
						"type": "DatasetReference"
					},
					"name": "Emp"
				},
				{
					"dataset": {
						"referenceName": "ds_blob_dept",
						"type": "DatasetReference"
					},
					"name": "dept"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_blob_result",
						"type": "DatasetReference"
					},
					"name": "Employeeanddeptdata"
				}
			],
			"transformations": [
				{
					"name": "Joinempanddeptdata"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as string,",
				"          name as string,",
				"          gender as string,",
				"          salary as string,",
				"          department as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Emp",
				"source(output(",
				"          Deptid as string,",
				"          Deptname as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> dept",
				"Emp, dept join(department == Deptid,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> Joinempanddeptdata",
				"Joinempanddeptdata sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id as string,",
				"          name as string,",
				"          gender as string,",
				"          salary as string,",
				"          department as string",
				"     ),",
				"     partitionFileNames:['empanddeptdata.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> Employeeanddeptdata"
			]
		}
	}
}